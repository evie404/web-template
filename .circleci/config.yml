version: 2.1
jobs:
  "Validate protobufs":
    docker:
      - image: circleci/golang:1.16.2-node
    resource_class: small
    steps:
      - checkout
      - run:
          name: Setup PATH
          command: |
            echo "export PATH=$HOME/.local/bin:$PATH" >> $BASH_ENV
            echo "export PATH="$(yarn global bin):$PATH"" >> $BASH_ENV
      - run:
          command: make proto-setup
      - run:
          command: make proto
      - run:
          command: ci/ensure_git_status_clean.sh
  "Bazel build":
    docker:
      - image: gcr.io/cloud-builders/bazel@sha256:b18235d91bb725131b40c495c52af6ab7ebce7c9b13b17113a05aa5af752885e
      - image: circleci/postgres:13.2-ram
        environment:
          POSTGRES_DB: web_template_test
          POSTGRES_HOST_AUTH_METHOD: trust
    resource_class: medium
    steps:
      - checkout
      - restore_cache:
          keys:
            - web-template-bazel-v0-{{ checksum ".bazelversion" }}-{{ checksum "WORKSPACE" }}-{{ checksum "api/go.sum" }}
            - web-template-bazel-v0-{{ checksum ".bazelversion" }}-{{ checksum "WORKSPACE" }}
            - web-template-bazel-v0-{{ checksum ".bazelversion" }}
            - web-template-bazel-v0
      - restore_cache:
          keys:
            - web-template-bazel-repo-v0-{{ checksum ".bazelversion" }}-{{ checksum "WORKSPACE" }}-{{ checksum "api/go.sum" }}
            - web-template-bazel-repo-v0-{{ checksum ".bazelversion" }}-{{ checksum "WORKSPACE" }}
            - web-template-bazel-repo-v0-{{ checksum ".bazelversion" }}
            - web-template-bazel-repo-v0
      - run:
          command: mkdir -p ~/.bazel_cache
      - run:
          command: bazel build //... --disk_cache=~/.bazel_cache --repository_cache=~/.bazel_repo --jobs=2
      - run:
          command: bazel run //api/schema/migrate/test
      - run:
          command: bazel test //... --disk_cache=~/.bazel_cache --repository_cache=~/.bazel_repo --jobs=2
      - run:
          command: bazel fetch //... --repository_cache=~/.bazel_repo
      - save_cache:
          key: web-template-bazel-repo-v0-{{ checksum ".bazelversion" }}-{{ checksum "WORKSPACE" }}-{{ checksum "api/go.sum" }}
          paths:
            - "~/.bazel_repo"
          when: always
      - save_cache:
          key: web-template-bazel-v0-{{ checksum ".bazelversion" }}-{{ checksum "WORKSPACE" }}-{{ checksum "api/go.sum" }}
          paths:
            - "~/.bazel_cache"
            - "~/.cache/bazelisk"
  "Go lint":
    docker:
      - image: golangci/golangci-lint:v1.37.1
    resource_class: small
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - run: pwd
      - checkout
      - run:
          command: golangci-lint run --timeout 2m
          working_directory: ./api

  "Go build":
    docker:
      - image: circleci/golang:1.16.2
      - image: circleci/postgres:13.2-ram
        environment:
          POSTGRES_DB: web_template_test
          POSTGRES_HOST_AUTH_METHOD: trust
    resource_class: small
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - run: pwd
      - checkout
      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-{{ checksum "api/go.sum" }}
            - go-mod
      - run:
          command: go build -v ./...
          working_directory: ./api
      - save_cache:
          key: go-mod-{{ checksum "api/go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          command: go run schema/migrate/test/main.go
          working_directory: ./api
      - run:
          command: go test -v ./...
          working_directory: ./api
  "Envoy validate config":
    docker:
      - image: "envoyproxy/envoy-alpine:v1.17.0@sha256:47ab124a5b4058a33a995a92de7f566104fc33e8af8302efab577231f3a84e51"
    resource_class: small
    steps:
      - checkout
      - run: envoy --config-path envoy/envoy.yaml --mode validate
  "Node build":
    docker:
      - image: "circleci/node:15.4.0"
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "web/yarn.lock" }}
            - yarn-packages
      - run:
          command: yarn install --immutable
          working_directory: ./web
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "web/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - restore_cache:
          keys:
            - next-{{ .Branch }}-{{ checksum "web/yarn.lock" }}
            - next-{{ .Branch }}
            - next
      - run:
          command: yarn run build
          working_directory: ./web
      - save_cache:
          key: next-{{ .Branch }}-{{ checksum "web/yarn.lock" }}
          paths:
            - ./web/.next
      - run:
          command: yarn run test
          working_directory: ./web
      - run:
          command: yarn run lint
          working_directory: ./web
      - run:
          command: ci/ensure_git_status_clean.sh
workflows:
  protobufs:
    jobs:
      - "Validate protobufs"
  bazel:
    jobs:
      - "Bazel build"
  node:
    jobs:
      - "Node build"
  go:
    jobs:
      - "Go build"
      - "Go lint"
      # TODO: validate dbmodels
  envoy:
    jobs:
      - "Envoy validate config"
